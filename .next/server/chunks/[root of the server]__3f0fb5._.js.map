{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/prisma/prisma-client.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\r\n\r\nconst prismaClientSingleton = () => {\r\n    return new PrismaClient()\r\n}\r\n\r\ndeclare const globalThis: {\r\n    prismaGlobal: ReturnType<typeof prismaClientSingleton>;\r\n} & typeof global;\r\n\r\nexport const prisma = globalThis.prismaGlobal ?? prismaClientSingleton()\r\n\r\nif (process.env.NODE_ENV !== 'production') globalThis.prismaGlobal = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC1B,OAAO,IAAI,2GAAA,CAAA,eAAY;AAC3B;AAMO,MAAM,SAAS,WAAW,YAAY,IAAI;AAEjD,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/api/cart/[id]/route.ts"],"sourcesContent":["import {NextRequest, NextResponse} from \"next/server\";\r\nimport {prisma} from \"../../../../../prisma/prisma-client\";\r\nimport {calcCartItemTotalAmount} from \"@/lib/calc-cart-item-total-amount\";\r\n\r\nasync function updateCartTotalAmount(userId: number, cartToken: string) {\r\n\r\n    const userCart = await prisma.cart.findFirst({\r\n        where: {\r\n            OR: [\r\n                {\r\n                    userId,\r\n                },\r\n                {\r\n                    tokenId: cartToken,\r\n                },\r\n            ],\r\n        },\r\n        include: {\r\n            items: {\r\n                orderBy: {\r\n                    createdAt: 'desc',\r\n                },\r\n                include: {\r\n                    productItem: {\r\n                        include: {\r\n                            product: true,\r\n                        },\r\n                    },\r\n                    ingredients: true,\r\n                },\r\n            },\r\n        },\r\n    });\r\n\r\n    const totalAmount = userCart?.items.reduce((acc, item) => {\r\n        return acc + calcCartItemTotalAmount(item);\r\n    }, 0);\r\n\r\n    return prisma.cart.update({\r\n        where: {\r\n            id: userCart?.id,\r\n        },\r\n        data: {\r\n            totalAmount,\r\n        },\r\n        include: {\r\n            items: {\r\n                orderBy: {\r\n                    createdAt: 'desc',\r\n                },\r\n                include: {\r\n                    productItem: {\r\n                        include: {\r\n                            product: true,\r\n                        },\r\n                    },\r\n                    ingredients: true,\r\n                },\r\n            },\r\n        },\r\n    });\r\n}\r\n\r\n\r\nexport async function PATCH(req: NextRequest, {params}: { params: { id: string } }) {\r\n\r\n    const {id} = params;\r\n    const data = await (req.json()) as { quantity: number };\r\n    const token = req.cookies.get('cartToken')?.value;\r\n\r\n\r\n    if (!token) {\r\n        return NextResponse.json({error: 'Cart token not found'});\r\n    }\r\n\r\n\r\n    const cartItem = await prisma.cartItem.findFirst({\r\n        where: {\r\n            id: Number(id),\r\n        }\r\n    })\r\n\r\n    if (!cartItem) {\r\n        return NextResponse.json({error: 'Cart item not found'});\r\n    }\r\n\r\n    await prisma.cartItem.update({\r\n        where: {\r\n            id: cartItem.id,\r\n        },\r\n        data: {\r\n            quantity: data.quantity,\r\n        }\r\n    })\r\n\r\n\r\n    return NextResponse.json(cartItem);\r\n}"],"names":[],"mappings":";;;AAAA;AACA;AACA;;;;AAEA,eAAe,sBAAsB,MAAc,EAAE,SAAiB;IAElE,MAAM,WAAW,MAAM,4HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,SAAS,CAAC;QACzC,OAAO;YACH,IAAI;gBACA;oBACI;gBACJ;gBACA;oBACI,SAAS;gBACb;aACH;QACL;QACA,SAAS;YACL,OAAO;gBACH,SAAS;oBACL,WAAW;gBACf;gBACA,SAAS;oBACL,aAAa;wBACT,SAAS;4BACL,SAAS;wBACb;oBACJ;oBACA,aAAa;gBACjB;YACJ;QACJ;IACJ;IAEA,MAAM,cAAc,UAAU,MAAM,OAAO,CAAC,KAAK;QAC7C,OAAO,MAAM,CAAA,GAAA,uJAAA,CAAA,0BAAuB,AAAD,EAAE;IACzC,GAAG;IAEH,OAAO,4HAAA,CAAA,SAAM,CAAC,IAAI,CAAC,MAAM,CAAC;QACtB,OAAO;YACH,IAAI,UAAU;QAClB;QACA,MAAM;YACF;QACJ;QACA,SAAS;YACL,OAAO;gBACH,SAAS;oBACL,WAAW;gBACf;gBACA,SAAS;oBACL,aAAa;wBACT,SAAS;4BACL,SAAS;wBACb;oBACJ;oBACA,aAAa;gBACjB;YACJ;QACJ;IACJ;AACJ;AAGO,eAAe,MAAM,GAAgB,EAAE,EAAC,MAAM,EAA6B;IAE9E,MAAM,EAAC,EAAE,EAAC,GAAG;IACb,MAAM,OAAO,MAAO,IAAI,IAAI;IAC5B,MAAM,QAAQ,IAAI,OAAO,CAAC,GAAG,CAAC,cAAc;IAG5C,IAAI,CAAC,OAAO;QACR,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,OAAO;QAAsB;IAC3D;IAGA,MAAM,WAAW,MAAM,4HAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC7C,OAAO;YACH,IAAI,OAAO;QACf;IACJ;IAEA,IAAI,CAAC,UAAU;QACX,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAC,OAAO;QAAqB;IAC1D;IAEA,MAAM,4HAAA,CAAA,SAAM,CAAC,QAAQ,CAAC,MAAM,CAAC;QACzB,OAAO;YACH,IAAI,SAAS,EAAE;QACnB;QACA,MAAM;YACF,UAAU,KAAK,QAAQ;QAC3B;IACJ;IAGA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B"}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}