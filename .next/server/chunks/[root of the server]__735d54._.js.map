{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/prisma/prisma-client.ts"],"sourcesContent":["import { PrismaClient } from '@prisma/client'\n\nconst prismaClientSingleton = () => {\n    return new PrismaClient()\n}\n\ndeclare const globalThis: {\n    prismaGlobal: ReturnType<typeof prismaClientSingleton>;\n} & typeof global;\n\nexport const prisma = globalThis.prismaGlobal ?? prismaClientSingleton()\n\nif (process.env.NODE_ENV !== 'production') globalThis.prismaGlobal = prisma"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,wBAAwB;IAC1B,OAAO,IAAI,2GAAA,CAAA,eAAY;AAC3B;AAMO,MAAM,SAAS,WAAW,YAAY,IAAI;AAEjD,wCAA2C,WAAW,YAAY,GAAG"}},
    {"offset": {"line": 65, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 71, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/api/ingredients/route.ts"],"sourcesContent":["import {prisma} from \"../../../../prisma/prisma-client\";\nimport {NextResponse} from \"next/server\";\n\n\nexport const GET = async () => {\n    const ingredients = await prisma.ingredient.findMany();\n    return NextResponse.json(ingredients);\n}"],"names":[],"mappings":";;;AAAA;AACA;;;AAGO,MAAM,MAAM;IACf,MAAM,cAAc,MAAM,4HAAA,CAAA,SAAM,CAAC,UAAU,CAAC,QAAQ;IACpD,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;AAC7B"}},
    {"offset": {"line": 82, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}